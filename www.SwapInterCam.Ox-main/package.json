{
  "name": "swapintercam-chat-desktop-ui",
  "version": "1.0.0",
  "description": "Unified desktop UI for WhatsApp, Messenger, and LINE with SwapInterCam integration",
  "main": "main.js",
  "scripts": {
    "start": "node web-production-server.js",
    "dev": "NODE_ENV=development node web-production-server.js",
    "unified:start": "node server-unified.js",
    "unified:dev": "NODE_ENV=development node server-unified.js",
    "unified:prod": "NODE_ENV=production node server-unified.js",
    "audit:commit": "node scripts/audit-commit.js",
    "audit:staged": "git add -n .",
    "precommit": "npm run audit:commit",
    "build": "electron-builder",
    "build:win": "electron-builder --win",
    "build:mac": "electron-builder --mac",
    "build:linux": "electron-builder --linux",
    "test": "jest",
    "lint": "eslint .",
    "pack": "electron-builder --dir",
    "dist": "electron-builder",
    "fix-preview-errors": "node scripts/fix-camera-preview.js",
    "enable-hot-swap": "node scripts/enable-device-hotswap.js",
    "add-blackframe-watchdog": "node scripts/add-frame-watchdog.js",
    "test-preview-multi-device": "node tests/test-multi-device-preview.js",
    "test-preview-stability": "node tests/stability-test.js",
    "test-hot-swap": "node tests/test-device-hotswap.js",
    "finalize-model-lifecycle": "node scripts/finalize-ai-models.js",
    "enable-model-switch": "node scripts/enable-model-switching.js",
    "add-model-fallback": "node scripts/add-model-fallback.js",
    "test-model-loadtime": "node tests/test-model-performance.js",
    "test-runtime-switch": "node tests/test-model-switching.js",
    "simulate-model-failure": "node tests/simulate-ai-failure.js",
    "e2e-full-pipeline": "node tests/e2e-full-pipeline.js",
    "stress-route-switch": "node tests/stress-route-switching.js",
    "enable-latency-logging": "node scripts/enable-latency-logs.js",
    "check-e2e-pass": "node tests/verify-e2e-results.js",
    "check-latency-thresholds": "node tests/check-latency.js",
    "verify-no-crash": "node tests/crash-detection.js",
    "profile-performance": "node scripts/profile-system.js",
    "fix-top-bottlenecks": "node scripts/optimize-bottlenecks.js",
    "rerun-targeted-tests": "node tests/targeted-performance.js",
    "compare-pre-post-metrics": "node tests/compare-metrics.js",
    "verify-no-regression": "node tests/verify-no-regression.js",
    "deploy-dashboards": "node scripts/deploy-monitoring.js",
    "configure-alerts": "node scripts/configure-alerts.js",
    "tag-build": "node scripts/tag-build-version.js",
    "verify-dashboard-realtime": "node tests/verify-dashboards.js",
    "simulate-error-alert": "node tests/test-alerting.js",
    "check-dashboard-metadata": "node tests/check-dashboard-meta.js",
    "workflow-execute": "node scripts/workflow-executor.js",
    "workflow-status": "tail -f ../../VALIDATION_LOG.md",
    "resilience-tests": "node tests/resilience-tests.js",
    "verify-auto-recovery": "node tests/verify-auto-recovery.js",
    "staging-smoke-test": "node tests/staging-smoke-test.js",
    "deploy-canary": "node scripts/deploy-canary.js",
    "full-deploy": "node scripts/full-deploy.js",
    "monitor-first-hour": "node tests/monitor-first-hour.js",
    "verify-kpis": "node tests/verify-kpis.js",
    "rollback-test": "node tests/rollback-test.js",
    "fix-syntax": "node scripts/fix-syntax.js",
    "restore-core": "node scripts/restore-core.js",
    "document-recovery": "node scripts/document-recovery.js",
    "check-core": "node tests/check-core.js",
    "smoke-test": "node tests/smoke-test.js",
    "fix-preview": "node scripts/fix-camera-preview.js",
    "add-device-hotswap": "node scripts/enable-device-hotswap.js",
    "restart-camera": "node scripts/restart-camera.js",
    "verify-preview": "node tests/verify-preview.js",
    "hotswap-test": "node tests/test-device-hotswap.js",
    "integrate-model": "node scripts/finalize-ai-models.js",
    "enable-runtime-switch": "node scripts/enable-model-switching.js",
    "add-fallback": "node scripts/add-model-fallback.js",
    "verify-model": "node tests/verify-model.js",
    "switch-test": "node tests/test-model-switching.js",
    "fallback-test": "node tests/simulate-ai-failure.js",
    "e2e-test": "node tests/e2e-full-pipeline.js",
    "stress-test": "node tests/stress-route-switching.js",
    "load-test": "node tests/load-test.js",
    "check-latency": "node tests/check-latency.js",
    "profile-cpu": "node scripts/profile-cpu.js",
    "optimize-cpu": "node scripts/optimize-cpu.js",
    "profile-memory": "node scripts/profile-memory.js",
    "optimize-memory": "node scripts/optimize-memory.js",
    "profile-gpu": "node scripts/profile-gpu.js",
    "optimize-gpu": "node scripts/optimize-gpu.js",
    "verify-performance": "node tests/verify-performance.js",
    "check-profiles": "node tests/check-profiles.js",
    "check-threadpool": "node tests/check-threadpool.js",
    "check-v8-flags": "node tests/check-v8-flags.js",
    "perf-benchmark": "node tests/perf-benchmark.js",
    "gc-benchmark": "node tests/gc-benchmark.js",
    "loop-latency": "node tests/loop-latency.js",
    "heap-stats": "node tests/heap-stats.js",
    "rss-usage": "node tests/rss-usage.js",
    "electron-mem-check": "node tests/electron-mem-check.js",
    "native-mem-test": "node tests/native-mem-test.js",
    "gpu-detect": "node tests/gpu-detect.js",
    "webgl-fps": "node tests/webgl-fps.js",
    "gpu-mem-check": "node tests/gpu-mem-check.js",
    "electron-gpu-config": "node tests/electron-gpu-config.js",
    "gpu-diagnostics": "node tests/gpu-diagnostics.js",
    "full-push-workflow": "node scripts/full-push-workflow-executor.js",
    "phase5-validation": "node scripts/phase5-validation.js",
    "build-validation-map": "node scripts/phase6/build-validation-map.js",
    "validate-all-criteria": "node scripts/phase6/validate-all-criteria.js",
    "stage-preprod": "node scripts/phase6/stage-preprod.js",
    "breach-latency": "node scripts/phase6/breach-latency.js",
    "breach-cpu": "node scripts/phase6/breach-cpu.js",
    "breach-memory": "node scripts/phase6/breach-memory.js",
    "breach-gpu": "node scripts/phase6/breach-gpu.js",
    "breach-errorcount": "node scripts/phase6/breach-errorcount.js",
    "reset-metrics": "node scripts/phase6/reset-metrics.js",
    "rollback-and-verify": "node scripts/phase6/rollback-and-verify.js",
    "verify-prod-readiness": "node scripts/phase6/verify-prod-readiness.js",
    "generate-gonogo": "node scripts/phase6/generate-gonogo.js",
    "test-latency": "node tests/loop-latency.js",
    "test-cpu": "node tests/check-threadpool.js && node tests/check-v8-flags.js",
    "test-memory": "node tests/heap-stats.js && node tests/rss-usage.js",
    "test-gpu": "node tests/gpu-detect.js && node tests/gpu-mem-check.js",
    "test-errorcount": "node tests/verify-no-crash.js",
    "phase6-complete": "npm run build-validation-map && npm run validate-all-criteria && npm run stage-preprod && npm run breach-latency && npm run breach-cpu && npm run breach-memory && npm run breach-gpu && npm run breach-errorcount && npm run reset-metrics && npm run rollback-and-verify && npm run verify-prod-readiness && npm run generate-gonogo",
    "phase7_production_push": "node scripts/phase7/e2eResilience.js && node scripts/phase7/injectFaults.js && node scripts/phase7/deployStaging.js && node scripts/phase7/deployCanary.js 10 && node scripts/phase7/deployCanary.js 50 && node scripts/phase7/deployCanary.js 100 && node scripts/phase7/rollback-and-verify.js && node scripts/phase7/generateApproval.js",
    "start-monitoring": "node scripts/start-post-launch-monitoring.js",
    "monitoring": "node scripts/start-post-launch-monitoring.js",
    "synthetic-test": "bash tests/synthetic_session_test.sh",
    "security-scan": "bash security/penetration_test.sh",
    "audit-replay": "bash scripts/audit_replay.sh",
    "apply-hotfix": "bash scripts/apply_hotfix.sh",
    "emergency-rollback": "bash scripts/rollback_to_prelaunch.sh",
    "create-prelaunch-backup": "node scripts/create-prelaunch-backup.js",
    "monitoring-status": "node -e \"console.log('SwapInterCam Monitoring Status'); console.log('Live Dashboard: http://localhost:3001/monitoring/live-monitoring.html'); console.log('Config: monitoring/post-launch-config.json');\"",
    "backend:start": "node src/backend/server.js",
    "backend:dev": "nodemon src/backend/server.js",
    "backend:status": "curl http://127.0.0.1:8001/api/health",
    "backend:state": "curl http://127.0.0.1:8001/api/state",
    "swep:start": "node swep-server.js",
    "usb:setup": "node scripts/setup-usb-master-drive.js",
    "usb:deploy": "node scripts/usb-deployment-system.js"
  },
  "keywords": [
    "electron",
    "chat",
    "whatsapp",
    "messenger",
    "line",
    "swapintercam",
    "obs",
    "camera"
  ],
  "author": "SwapInterCam Team",
  "license": "MIT",
  "devDependencies": {
    "electron": "^38.2.2",
    "electron-builder": "^24.9.1",
    "eslint": "^8.56.0",
    "jest": "^29.7.0"
  },
  "dependencies": {
    "cors": "^2.8.5",
    "dotenv": "^17.2.1",
    "express": "^5.1.0",
    "node-fetch": "^2.7.0",
    "socket.io": "^4.8.1",
    "winston": "^3.17.0",
    "ws": "^8.18.3"
  },
  "build": {
    "appId": "com.swapintercam.chat-desktop-ui",
    "productName": "SwapInterCam Chat Desktop",
    "directories": {
      "output": "dist"
    },
    "files": [
      "main.js",
      "preload.js",
      "src/**/*",
      "assets/**/*",
      "config/**/*",
      "models/**/*",
      "node_modules/**/*",
      "!node_modules/.cache",
      "!**/*.map"
    ],
    "win": {
      "target": "nsis",
      "icon": "assets/logos/swapintercam-logo.png"
    },
    "mac": {
      "target": "dmg",
      "icon": "assets/logos/swapintercam-logo.png"
    },
    "linux": {
      "target": "AppImage",
      "icon": "assets/logos/swapintercam-logo.png"
    },
    "nsis": {
      "oneClick": false,
      "allowToChangeInstallationDirectory": true
    }
  },
  "homepage": "https://swapintercam.com",
  "repository": {
    "type": "git",
    "url": "https://github.com/swapintercam/chat-desktop-ui.git"
  },
  "overrides": {
    "rimraf": "^4.0.0",
    "glob": "^10.0.0",
    "@humanwhocodes/config-array": "npm:@eslint/config-array",
    "@humanwhocodes/object-schema": "npm:@eslint/object-schema"
  }
}
